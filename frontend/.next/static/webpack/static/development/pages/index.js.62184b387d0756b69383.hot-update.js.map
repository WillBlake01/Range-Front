{"version":3,"file":"static/webpack/static/development/pages/index.js.62184b387d0756b69383.hot-update.js","sources":["webpack:///./components/Header.js","webpack:///./components/Nav.js","webpack:///./components/RemoveFromCart.js","webpack:///./components/TakeMyMoney.js","webpack:///./components/User.js"],"sourcesContent":["import Link from 'next/link';\nimport styled from 'styled-components';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport Nav from './Nav';\nimport Search from './Search';\nimport LearnMoreButton from './LearnMoreButton';\nimport Cart from './Cart';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nconst Logo = styled.h1`\n  font-size: 4rem;\n  margin-left: 2rem;\n  position: relative;\n  z-index: 2;\n  transform: skew(-7deg);\n  a {\n    padding: 0.5rem 1rem;\n    background: ${props => props.theme.green};\n    color: white;\n    text-transform: uppercase;\n    text-decoration: none;\n  }\n  @media (max-width: 1300px) {\n    margin: 0;\n    text-align: center;\n  }\n`;\n\nconst StyledHeader = styled.header`\n  .bar {\n    width: 100%;\n    height: 480px;\n    border-bottom: 4px solid ${props => props.theme.green};\n    display: grid;\n    grid-template-columns: auto 1fr;\n    justify-content: space-between;\n    align-items: stretch;\n    background-image: url('https://res.cloudinary.com/willblake01/image/upload/v1538509884/range-front/main_img.png');\n      #button {\n      position: relative;\n      left: 132px;\n      bottom: 60px;\n      }\n      .header-copy {\n        align-self: flex-start;\n        position: relative;\n        left: 132px;\n          #first-line {\n            font-family: AbrilFatface-Regular;\n            font-size: 40px;\n          }\n          #second-line {\n            position: relative;\n            bottom: 34px;\n            font-family: AbrilFatface-Regular;\n            font-size: 88px;\n          }\n          #third-line {\n            position: relative;\n            bottom: 74px;\n            font-family: Raleway-Medium;\n            font-size: 20px;\n          }\n          #fourth-line {\n            position: relative;\n            bottom: 70px;\n            font-family: Raleway-Medium;\n            font-size: 20px;\n          }\n      }\n    @media (max-width: 1300px) {\n      grid-template-columns: 1fr;\n      justify-content: center;\n    }\n  }\n  .sub-bar {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    border: 4px solid ${props => props.theme.green};\n  }\n`;\n\nconst NavStyle = styled.div`\n  position: relative;\n  top: 110px;\n`;\n\nconst CopyStyle = styled.div`\n  line-height: 0px;\n  color: ${props => props.theme.darkOrange};\n  opacity: .9;\n`;\n\nconst Header = () => (\n  <StyledHeader>\n    <div className='bar'>\n      <Logo>\n        <Link href='/'>\n          <a>Range Front</a>\n        </Link>\n      </Logo>\n      <NavStyle>\n        <Nav />\n      </NavStyle>\n      <CopyStyle>\n        <div className='header-copy'>\n          <p id='first-line'>For the love of</p>\n          <p id='second-line'>OUTDOOR</p>\n          <p id='third-line'>Whether you're a weekend warrior or a</p>\n          <p id='fourth-line'>Navy SEAL, we've got you covered.</p>\n        </div>\n        <div id='button'>\n          <Link href='/learnMore'>\n            <a>\n              <LearnMoreButton>LEARN MORE</LearnMoreButton>\n            </a>\n          </Link>\n        </div>\n      </CopyStyle>\n    </div>\n    <div className='sub-bar'>\n      <Search />\n    </div>\n    <Cart />\n  </StyledHeader>\n)\n\nexport default Header;\n","import Link from 'next/link';\nimport styled from 'styled-components';\nimport { Mutation } from 'react-apollo';\nimport { TOGGLE_CART_MUTATION } from './Cart';\nimport User from './User';\nimport SignOut from './SignOut';\nimport CartCount from './CartCount';\n\nconst NavStyle = styled.ul`\n  width: 100%;\n  height: 55px;\n  background-color: ${props => props.theme.darkOrange};\n  opacity: .9;\n  margin: 0;\n  padding: 5px 20px 5px 20px;\n  display: flex;\n  align-items: center;\n  /* justify-self: end; */\n  font-size: 1.6rem;\n  a {\n    margin-right: 5px;\n    margin-left: 5px;\n    color: ${props => props.theme.white};\n  }\n  a:hover {\n    color: blue;\n  }\n`;\n\nconst StyledButton = styled.button `\n  background-color: ${props => props.theme.darkOrange};\n  font-size: 16px;\n  border: none;\n  width: 82px;\n`;\n\nconst Nav = () => (\n  <>\n    <User>\n      {({data: { me } }) => (\n        <NavStyle>\n          <Link href='/aboutUs'>\n          <a>About</a>\n          </Link>\n          <Link href='/items'>\n            <a>Shop</a>\n          </Link>\n          {me && (\n            <>\n              <Link href='/orders'>\n                <a>Orders</a>\n              </Link>\n              <Link href='/me'>\n                <a>Account</a>\n              </Link>\n              <SignOut />\n              <Mutation mutation={TOGGLE_CART_MUTATION}>\n                {(toggleCart) => (\n                  <>\n                    <StyledButton onClick={toggleCart}>\n                      <a>My Cart</a>\n                    </StyledButton>\n                    <CartCount\n                        count={me.cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0)}\n                    >\n                    </CartCount>\n                  </>\n                )}\n              </Mutation>\n            </>\n          )}\n          {!me && (\n            <>\n              <Link href='/signin'>\n                <a>Sign In</a>\n              </Link>\n              <Link href='/signup'>\n                <a>Sign Up</a>\n              </Link>\n            </>\n          )}\n        </NavStyle>\n      )}\n    </User>\n  </>\n);\n\nexport default Nav;\n","import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  color: ${props => props.theme.black};\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nclass RemoveFromCart extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  };\n\n  // This gets called as soon as we get a response back from the server after a mutation has been called\n  update = (cache, payload) => {\n    // 1. Read the cache\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY });\n    // 2. Remove the item from the cart\n    const cartItemId = payload.data.removeFromCart.id;\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\n    // 3. Write it back to the cache\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data })\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={REMOVE_FROM_CART_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n        optimisticResponse={{\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id,\n          }\n        }}\n      >\n        {(removeFromCart, { loading, error }) => (\n          <BigButton\n            title='Delete Item'\n            onClick={() => {\n              removeFromCart().catch(err => alert(err.message));\n            }}\n            disbled={loading}\n          >\n            &times;\n          </BigButton>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default RemoveFromCart;\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n};\n\nclass TakeMyMoney extends React.Component {\n  onToken = async (res, createOrder) => {\n    NProgress.start();\n\n    // Manually call the mutation once we have the Stripe token\n    const order = await createOrder({\n      variables: {\n        token: res.id,\n      },\n    }).catch(err => {\n      alert(err.message);\n    });\n    Router.push({\n      pathname: '/order',\n      query: { id: order.data.createOrder.id },\n    });\n  };\n  render() {\n    return(\n      <User>\n        {({ data: { me }, loading }) => {\n          if (loading) return null;\n          return (\n            <Mutation\n              mutation={CREATE_ORDER_MUTATION}\n              refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n              {createOrder => (\n                <StripeCheckout\n                  amount={calcTotalPrice(me.cart)}\n                  name='Range Front'\n                  description={`Order of ${totalItems(me.cart)} items!`}\n                  image={me.cart.length && me.cart[0].item && me.cart[0].item.image}\n                  stripeKey='pk_test_TWkMSIUvATWhLhvIxi8UMBwB'\n                  currency='USD'\n                  email={me.email}\n                  token={res => this.onToken(res, createOrder)}\n                >\n                  {this.props.children}\n                </StripeCheckout>\n            )}\n            </Mutation>\n          );\n        }}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;\n","import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n      cart {\n        id\n        quantity\n        item {\n          id\n          price\n          image\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\nconst User = props => (\n  <Query {...props} query={CURRENT_USER_QUERY}>\n    {payload => props.children(payload)}\n  </Query>\n);\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired,\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };\n"],"mappings":"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","sourceRoot":""}
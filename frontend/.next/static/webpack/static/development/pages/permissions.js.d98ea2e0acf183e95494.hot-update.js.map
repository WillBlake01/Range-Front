{"version":3,"file":"static/webpack/static/development/pages/permissions.js.d98ea2e0acf183e95494.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\n\nconst StyledButton = styled.button`\n    width: auto;\n    background: red;\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 600;\n    padding: 0.5rem 1.2rem;\n`;\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATIONS = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatePermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\n\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => (\n    <Query query={ALL_USERS_QUERY}>\n      {({data, loading, error}) =>\n      console.log(data) || (\n        <div>\n          <Error error={error} />\n          <div>\n            <h2>Manage Permissions</h2>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  {possiblePermissions.map(permission =>\n                    <th key={permission}>{permission}</th>)}\n                    <th>üëáüèª</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.users.map(user => <UserPermissions user={user} key={user.id} />)}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      )}\n    </Query>\n);\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n  state = {\n    permissions: this.props.user.permissions,\n  }\n  handlePermissionChange = (e) => {\n    const checkbox = e.target;\n    // Take a copy of the updated permissions\n    let updatedPermissions = [...this.state.permissions];\n    // Find out if we need to remove or add this\n    if(checkbox.checked) {\n      // Add it in!\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n    }\n    this.setState({ permissions: updatedPermissions })\n  };\n  render() {\n    const user = this.props.user;\n    return (\n      <Mutation mutation={UPDATE_PERMISSIONS_MUTATIONS} variables={{\n        permissions: this.state.permissions,\n        userId: this.props.user.id\n      }}>\n        {(updatePermissions, { loading, error }) => (\n          <>\n          { error && <Error error={error} /> }\n          <tr>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            {possiblePermissions.map(permission => (\n              <td key={permission}>\n                <label htmlFor={`${user.id}-permission-${permission}`}>\n                  <input\n                    type='checkbox'\n                    checked={this.state.permissions.includes(permission)}\n                    value={permission}\n                    onChange={this.handlePermissionChange}\n                    id={`${user.id}-permission-${permission}`}\n                  />\n                </label>\n              </td>\n            ))}\n            <td>\n              <StyledButton\n                type='button'\n                disabled={loading}\n                onClick={updatePermissions}\n              >\n                Update!\n              </StyledButton>\n            </td>\n          </tr>\n          </>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default Permissions;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAUA;AASA;AAWA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAFA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AASA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAiCA;;;;AAjEA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAkEA;;;;A","sourceRoot":""}